<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Add Product</title>
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.css" rel="stylesheet">
    <style>
        .container {
            margin-top: 50px;
        }

        .form-group img {
            max-width: 100px;
            margin-bottom: 10px;
        }

        .form-container {
            background-color: #f8f9fa;
            padding: 30px;
            border-radius: 8px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            max-width: 800px;
            margin: auto;
        }

        .form-group {
            margin-bottom: 15px;
        }

        .row {
            display: flex;
            align-items: center;
            justify-content: space-between;
            margin-bottom: 10px;
        }

        .row img {
            max-width: 150px;
            margin-right: 10px;
        }

        .image-cropper {
            margin-left: 10px;
        }

        #addedImagesContainer {
            display: flex;
            flex-wrap: wrap;
            gap: 10px;
            margin-bottom: 20px;
        }

        .thumbnail {
            position: relative;
            display: inline-block;
            width: 70px;
            height: 70px;
        }

        .thumbnail img {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }

        .remove-icon {
            position: absolute;
            top: 0;
            right: 0;
            background: white;
            color: black;
            font-size: 12px;
            width: 16px;
            height: 16px;
            display: flex;
            justify-content: center;
            align-items: center;
            border-radius: 50%;
            cursor: pointer;
        }
    </style>

</head>

<body>
    <nav aria-label="breadcrumb">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="#">Admin</a></li>
            <li class="breadcrumb-item"><a href="/admin/product">Products</a></li>
            <li class="breadcrumb-item active" aria-current="page">Edit Product</li>
        </ol>
    </nav>
    <div class="container">
        <h4>Add Product</h4>
        <br>

        <div class="form-container">
            <form action="/admin/addProduct" method="post" id="add-product-form" enctype="multipart/form-data">
                <div class="form-group">
                    <div class="card-header">
                        <h4>Choose images</h4>
                    </div>

                    <!-- Thumbnails Container -->
                    <div class=" row">
                        <div id="addedImagesContainer" class="thumbnails-container"></div>
                    </div>

                    <!-- Input Field 1 -->
                    <div class="row">
                        <div class="selected-images-container" id="selectedImagesContainer1"></div>
                        <input class="form-control" type="file" name="images" id="input1"
                            accept="image/png, image/jpeg, image/jpg">
                        <img src="" id="croppedImg1" alt="">
                        <button type="button" id="saveButton1" class="btn-sm btn-primary">Save</button>
                    </div>


                    <!-- Input Field 2 -->
                    <div class="row">
                        <div class="selected-images-container" id="selectedImagesContainer2"></div>
                        <input class="form-control" type="file" name="images" id="input2"
                            accept="image/png, image/jpeg, image/jpg">
                        <img src="" id="croppedImg2" alt="">
                        <button type="button" id="saveButton2" class="btn-sm btn-primary">Save</button>
                    </div>

                    <!-- Input Field 3 -->
                    <div class="row">
                        <div class="selected-images-container" id="selectedImagesContainer3"></div>
                        <input class="form-control" type="file" name="images" id="input3"
                            accept="image/png, image/jpeg, image/jpg">
                        <img src="" id="croppedImg3" alt="">
                        <button type="button" id="saveButton3" class="btn-sm btn-primary">Save</button>
                    </div>


                    <!-- Input Field 4 -->
                    <div class="row">
                        <div class="selected-images-container" id="selectedImagesContainer4"></div>
                        <input class="form-control" type="file" name="images" id="input4"
                            accept="image/png, image/jpeg, image/jpg">
                        <img src="" id="croppedImg4" alt="">
                        <button type="button" id="saveButton4" class="btn-sm btn-primary">Save</button>
                    </div>
                </div>


                <div class="form-group">
                    <label for="bookName">Book Name</label>
                    <input type="text" class="form-control" id="bookName" name="productName">
                    <div class="text-danger" id="name-error"></div>
                </div>

                <div class="form-group">
                    <label for="authorName">Author Name</label>
                    <input type="text" class="form-control" id="authorName" name="authorName">
                    <div class="text-danger" id="auther-name-error"></div>
                </div>

                <div class="form-group">
                    <label for="category">Category</label>
                    <%if(categories.length===0){%>
                        <small>No categories found</small>
                        <%}else{%>
                            <datalist name="category" id="categories" name="category">
                                <%categories.forEach(category=>{%>
                                    <option value="<%=category.name%>">
                                    </option>
                                    <%})%>
                            </datalist>
                            <input list="categories" id="categories" name="category"
                                placeholder="Select or type a category">
                            <%}%>
                                <div class="text-danger" id="category-error"></div>
                </div>

                <div class="form-group">
                    <label for="stock">Stock</label>
                    <select class="form-control" id="stock" name="status">
                        <option>Available</option>
                        <option>Out Of Stock</option>
                        <option>Disconnected</option>
                    </select>
                    <div class="text-danger" id="stock-error"></div>
                </div>

                <div class="form-group">
                    <label for="publishedDate">Published Date</label>
                    <input type="date" class="form-control" id="publishedDate" name="publishDate">
                    <div class="text-danger" id="publish-date-error"></div>
                </div>

                <div class="form-group">
                    <label for="publisher">Publisher</label>
                    <input type="text" class="form-control" id="publisher" name="publisher">
                    <div class="text-danger" id="publisher-error"></div>
                </div>

                <div class="form-group">
                    <label for="price">Price</label>
                    <input type="number" class="form-control" id="price" name="regularPrice">
                    <div class="text-danger" id="price-error"></div>
                </div>

                <div class="form-group">
                    <label for="offer">Offer(%)</label>
                    <input type="text" class="form-control" id="offer" name="productOffer">
                    <div class="text-danger" id="offer-error"></div>
                </div>

                <div class="form-group">
                    <label for="noOfPages">No-of Pages</label>
                    <input type="text" class="form-control" id="noOfPages" name="numberPage">
                    <div class="text-danger" id="number-page-error"></div>
                </div>

                <div class="form-group">
                    <label for="availableQuantity">Available Quantity</label>
                    <input type="number" class="form-control" id="availableQuantity" name="quantity">
                    <div class="text-danger" id="quantity-error"></div>
                </div>

                <div class="form-group">
                    <label for="description">Description</label>
                    <textarea class="form-control" id="description" rows="3" name="description"></textarea>
                    <div class="text-danger" id="description-error"></div>
                </div>

                <button type="submit" class="btn btn-dark">Save</button>
                <button type="button" class="btn btn-secondary">Cancel</button>
            </form>
        </div>
        <br><br>
    </div>

    <script>
        const addForm = document.getElementById('add-product-form')

        const name = document.getElementById('bookName')
        const autherName = document.getElementById('authorName')
        const category = document.getElementById('categories')
        const stock = document.getElementById('stock')
        const publishDate = document.getElementById('publishedDate')
        const publisher = document.getElementById('publisher')
        const price = document.getElementById('price')
        const offer = document.getElementById('offer')
        const numberPage = document.getElementById('noOfPages')
        const quantity = document.getElementById('availableQuantity')
        const description = document.getElementById('description')

        const nameError = document.getElementById('name-error')
        const autherNameError = document.getElementById("auther-name-error")
        const categoryError = document.getElementById('category-error')
        const stockError = document.getElementById('stock-error')
        const publishDateError = document.getElementById("publish-date-error")
        const publisherError = document.getElementById('publisher-error')
        const priceError = document.getElementById('price-error')
        const offerError = document.getElementById('offer-error')
        const numberPageError = document.getElementById("number-page-error")
        const quantityError = document.getElementById('quantity-error')
        const descriptionError = document.getElementById("description-error")

        const croppers = {};

        function viewImage(event, index) {
            const input = event.target;
            const reader = new FileReader();

            if (croppers[index]) {
                croppers[index].destroy();
            }

            reader.onload = function () {
                const image = document.getElementById(`croppedImg${index}`);
                image.src = reader.result;

                croppers[index] = new Cropper(image, {
                    aspectRatio: 1,
                    viewMode: 1,
                    guides: true,
                    background: false,
                    autoCropArea: 1,
                    zoomable: true,
                });

                document.getElementById(`saveButton${index}`).onclick = function () {
                    const croppedCanvas = croppers[index].getCroppedCanvas();
                    croppedCanvas.toBlob((blob) => {
                        const formData = new FormData();
                        formData.append('image', blob, `cropped-img-${Date.now()}-${index}.jpg`);

                        fetch('/admin/addProduct', {
                            method: 'POST',
                            body: formData,
                        })
                            .then(response => response.json())
                            .then(data => {
                                console.log('Image uploaded successfully', data);
                            })
                            .catch(error => {
                                console.error('Error uploading image', error);
                            });
                    });

                    document.getElementById(`croppedImg${index}`).style.display = 'none';
                };
            };
            reader.readAsDataURL(input.files[0]);
        }

        const selectedImages = [];

        function handleFileSelect(event) {
            const inputId = event.target.id;
            const files = event.target.files;
            const selectedImagesContainer = document.getElementById(`selectedImagesContainer${inputId.slice(-1)}`);
            const thumbnailsContainer = document.getElementById('addedImagesContainer');

            selectedImagesContainer.innerHTML = '';

            for (let i = 0; i < files.length; i++) {
                const file = files[i];

                const preview = document.createElement('img');
                preview.src = URL.createObjectURL(file);
                preview.alt = 'Selected image';
                preview.className = 'input-preview';
                selectedImagesContainer.appendChild(preview);

                const thumbnail = document.createElement('div');
                thumbnail.className = 'thumbnail';

                const img = document.createElement('img');
                img.src = URL.createObjectURL(file);
                img.alt = 'Thumbnail';
                img.className = 'thumbnail-img';

                const removeIcon = document.createElement('span');
                removeIcon.className = 'remove-icon';
                removeIcon.innerHTML = '&times;';
                removeIcon.addEventListener('click', function () {
                    thumbnail.remove();

                    const input = document.getElementById(inputId);
                    input.value = '';
                });

                thumbnail.appendChild(img);
                thumbnail.appendChild(removeIcon);
                thumbnailsContainer.appendChild(thumbnail);
            }
        }


        document.getElementById('input1').addEventListener('change', (event) => {
            handleFileSelect(event);
            viewImage(event, 1);
        });
        document.getElementById('input2').addEventListener('change', (event) => {
            handleFileSelect(event);
            viewImage(event, 2);
        });
        document.getElementById('input3').addEventListener('change', (event) => {
            handleFileSelect(event);
            viewImage(event, 3);
        });
        document.getElementById('input4').addEventListener('change', (event) => {
            handleFileSelect(event);
            viewImage(event, 4);
        });



        document.getElementById('input1').addEventListener('change', handleFileSelect);
        document.getElementById('input2').addEventListener('change', handleFileSelect);
        document.getElementById('input3').addEventListener('change', handleFileSelect);
        document.getElementById('input4').addEventListener('change', handleFileSelect);


        function nameValidationChecking(isValid) {
            const nameVal = name.value
            if (!nameVal) {
                nameError.textContent = 'Name can not be empty. Please enter name.'
                isValid = false
            } else {
                nameError.textContent = ''
            }

            return isValid
        }

        function priceValidationChecking(isValid) {
            const priceVal = price.value
            const pricePattern = /\d/
            if (!priceVal) {
                priceError.textContent = 'Poduct price can not be empty.'
                isValid = false
            } else if (!pricePattern.test(priceVal)) {
                priceError.textContent = 'Product price should be number. Please enter valid price.'
                isValid = false
            } else {
                priceError.textContent = ''
            }
            return isValid
        }
        function offerValidationChecking(isValid) {
            const offerVal = offer.value
            const offerPattern = /\d/

            if (!offerPattern.test(offerVal) && offerVal) {
                offerError.textContent = 'Product offer should be number. Please enter valid price.'
                isValid = false
            } else if (offerVal > 100) {
                offerError.textContent = 'Product offer should be below 100%'
                isValid = false
            }
            return isValid
        }
        function numberOfPagesValidationChecking(isValid) {
            const numberPageVal = numberPage.value
            const numberPagePatt = /\d/

            if (!numberPagePatt.test(numberPageVal) && numberPageVal) {
                numberPageError.textContent = 'number of page should be in digits'
            } else {
                numberPageError.textContent = ''
            }
            return isValid
        }

        function quantityValidationChecking(isValid) {
            const quantityVal = quantity.value
            const quantityPatt = /\d/
            if (!quantityVal) {
                quantityError.textContent = 'Product quantity can not be empty.'
                isValid = false
            } else if (!quantityPatt.test(quantityVal)) {
                quantityError.textContent = 'Quantity should be in digit.'
                isValid = false
            } else {
                quantityError.textContent = ''
            }
            return isValid
        }


        function categoryValidationChecking(isValid) {
            const categoryVal = category.value
            if (!categoryVal || categoryVal == 'Select category') {
                categoryError.textContent = 'Category can not be empty. Please select or enter a category.'
                isValid = false
            } else {
                categoryError.textContent = ''
            }
            return isValid
        }

        addForm.addEventListener('submit', (event) => {
            let isValid = true
            isValid = nameValidationChecking(isValid)
            isValid = priceValidationChecking(isValid)
            isValid = offerValidationChecking(isValid)
            isValid = numberOfPagesValidationChecking(isValid)
            isValid = quantityValidationChecking(isValid)


            if (!isValid) {
                event.preventDefault()
            }
        })
    </script>

    <%if(message){%>
        <script>
            alert('<%=message%>')
        </script>
        <%}%>
            <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
            <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.5.4/dist/umd/popper.min.js"></script>
            <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
            <script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script>
</body>

</html>